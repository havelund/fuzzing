
Todo:

[x] One function to be called, which does the refinement
[x] Return the solution
[x] Define function for converting an SMT command back
[x] Fix example 1 to follow the same pattern
[x] LTL parser
    [x] dataclasses
    [x] pretty_print
    [x] specification = formula-list
    [x] translate example1 and example2
    [x] proper error messages

[x] Rename evaluate to generate_smt
[x] Testing
[x] Tracy's XML for the documentation
[x] Make the pattern matches self-contained
[x] Make them unique in commands file
[x] add extract selector function
[x] Consider only one pattern (the conditional one)
[x] Change examples
[x] perfectionate command pattern
[x] add norule
[x] Consider binding even the command name (to handle e.g. time)

[x] Integrate with the main tool
    [x] What about strings
    [x] Look at refinement process, why so slow?
[x] Count problem
[x] Constraints from XML file beyond types (min,max,enum)

[x] Clean up run interface focusing on SMT solution
[x] Optimize refinement
[x] Make it an option whether to use to_smt or evaluate for refinement
[>] Create XML file for tests and rerun tests

[ ] Wellformedness check
[ ] Comment code
[ ] Document package

